library(readxl)
library(dplyr)
IPVN <- read_excel("C:/Users/Hp/Downloads/IPVN.xlsx")
View(IPVN)
IPVN<-IPVN[-c(1:8),]
head(IPVN)
IPVN<-IPVN[-c(1:7),]
library(readxl)
library(dplyr)
IPVN <- read_excel("C:/Users/Hp/Downloads/IPVN.xlsx")
View(IPVN)
IPVN<-IPVN[-c(1:7),3]
IPVN
IPVN <- read_excel("C:/Users/Hp/Downloads/IPVN.xlsx")
IPVN<-IPVN[-c(1:7),c(1,4)]
IPVN
library(readxl)
library(dplyr)
IPVN <- read_excel("C:/Users/Hp/Downloads/IPVN.xlsx")
IPVN<-IPVN[-c(1:8),c(1,4)]
names(IPVN)<-c("Fechas","Bogotá")
library(readxl)
library(dplyr)
IPVN <- read_excel("C:/Users/Hp/Downloads/IPVN.xlsx")
library(readxl)
library(dplyr)
IPVN <- read_excel("C:/Users/Hp/Downloads/IPVN.xlsx")
View(IPVN)
IPVN<-IPVN[-c(1:8,),c(1,4)]
names(IPVN)<-c("Fechas","Bogotá")
library(readxl)
library(dplyr)
IPVN <- read_excel("C:/Users/Hp/Downloads/IPVN.xlsx")
IPVN<-IPVN[-c(1:8,205:214),c(1,4)]
names(IPVN)<-c("Fechas","Bogotá")
2020-2004
16*12
205-10
2019-2004
15*12
library(readxl)
library(dplyr)
IPVN <- read_excel("C:/Users/Hp/Downloads/IPVN.xlsx")
IPVN<-IPVN[-c(1:8,206:214),c(1,4)]
IPVN<-IPVN[-c(1:8,205:214),c(1,4)]
library(readxl)
library(dplyr)
IPVN <- read_excel("C:/Users/Hp/Downloads/IPVN.xlsx")
View(IPVN)
IPVN<-IPVN[-c(1:8,205:214),c(1,4)]
seq(as.Date('2004-01-31'), as.Date('2020-04-20'), by = "mounth"), 10)
seq(as.Date('2004-01-31'), as.Date('2020-04-20'), by = "month"), 10)
seq(as.Date('2004-01-31'), as.Date('2020-04-20'), by = "month")
seq(as.Date('2004-01-31'), as.Date('2020-04-20'), by = "year")
seq(as.Date('2004-01-31'), as.Date('2020-04-20'), by = "day")
seq(as.Date('2004-01-31'), as.Date('2020-04-20'), by = "month")
seq(as.Date('2004-01-31'), as.Date('2020-04-30'), by = "month")
seq(as.Date('2004-01-30'), as.Date('2020-04-30'), by = "month")
a<-seq(as.Date('2004-01-30'), as.Date('2020-04-30'), by = "month")
a
a<-seq(as.Date('2004-01-28'), as.Date('2020-04-28'), by = "month")
a
library(readxl)
library(dplyr)
IPVN <- read_excel("C:/Users/Hp/Downloads/IPVN.xlsx")
IPVN<-IPVN[-c(1:8,205:214),c(1,4)]
names(IPVN)<-c("Fechas","Bogotá")
IPVN$Fechas<-a
as.ts(IPVN)
ts(IPNV)
ts(IPVN)
ts(IPVN,start = c('2004-01-28'),end = c('2020-04-28'),frequency = 12)
ts(IPVN,start = c(2004,01,28),end = c(2020,04,28),frequency = 12)
IPVN <- read_excel("C:/Users/Hp/Downloads/IPVN.xlsx")
IPVN<-IPVN[-c(1:8,205:214),c(1,4)]
ts(IPVN,start = c(2004,01,28),end = c(2020,04,28),frequency = 12)
IPVN <- read_excel("C:/Users/Hp/Downloads/IPVN.xlsx")
IPVN<-IPVN[-c(1:8,205:214),4]
ts(IPVN,start = c(2004,01,28),end = c(2020,04,28),frequency = 12)
IPVN <- read_excel("C:/Users/Hp/Downloads/IPVN.xlsx")
IPVN<-IPVN[-c(1:8,205:214),4]
ts(IPVN,start = c(2004,01,28),end = c(2020,04,28),frequency = 12)
IPVN <- read_excel("C:/Users/Hp/Downloads/IPVN.xlsx")
View(IPVN)
IPVN<-IPVN[-c(1:8,205:214),4]
# names(IPVN)<-c("Fechas","Bogotá")
# a<-seq(as.Date('2004-01-28'), as.Date('2020-04-28'), by = "month")
# IPVN$Fechas<-a
ts(IPVN,start = c(2004,01,28),end = c(2020,04,28),frequency = 12)
# names(IPVN)<-c("Fechas","Bogotá")
# a<-seq(as.Date('2004-01-28'), as.Date('2020-04-28'), by = "month")
# IPVN$Fechas<-a
IPVN<-ts(IPVN,start = c(2004,01,28),end = c(2020,04,28),frequency = 12)
plot(IPVN)
# names(IPVN)<-c("Fechas","Bogotá")
# a<-seq(as.Date('2004-01-28'), as.Date('2020-04-28'), by = "month")
# IPVN$Fechas<-a
IPVN<-ts(Bogota=IPVN,start = c(2004,01,28),end = c(2020,04,28),frequency = 12)
# names(IPVN)<-c("Fechas","Bogotá")
# a<-seq(as.Date('2004-01-28'), as.Date('2020-04-28'), by = "month")
# IPVN$Fechas<-a
IPVN<-ts(IPVN,start = c(2004,01,28),end = c(2020,04,28),frequency = 12)
names(IPVN)<-c("indice de precio vivienda")
# names(IPVN)<-c("Fechas","Bogotá")
# a<-seq(as.Date('2004-01-28'), as.Date('2020-04-28'), by = "month")
# IPVN$Fechas<-a
IPVN<-ts(IPVN,start = c(2004,01,28),end = c(2020,04,28),frequency = 12)
plot(IPVN)
IPVN <- read_excel("C:/Users/Hp/Downloads/IPVN.xlsx")
View(IPVN)
IPVN<-IPVN[-c(1:8,205:214),4]
names(IPVN)<-c("indice de precio vivienda")
View(IPVN)
# names(IPVN)<-c("Fechas","Bogotá")
# a<-seq(as.Date('2004-01-28'), as.Date('2020-04-28'), by = "month")
# IPVN$Fechas<-a
IPVN<-ts(IPVN,start = c(2004,01,28),end = c(2020,04,28),frequency = 12)
plot(IPVN)
lam = BoxCox.lambda(IPVN)
library(readxl)
library(dplyr)
require(TSA)
require(forecast)
require(tseries)
require(ggplot2)
require(car)
IPVN <- read_excel("C:/Users/Hp/Downloads/IPVN.xlsx")
IPVN<-IPVN[-c(1:8,205:214),4]
names(IPVN)<-c("indice de precio vivienda")
# names(IPVN)<-c("Fechas","Bogotá")
# a<-seq(as.Date('2004-01-28'), as.Date('2020-04-28'), by = "month")
# IPVN$Fechas<-a
IPVN<-ts(IPVN,start = c(2004,01,28),end = c(2020,04,28),frequency = 12)
plot(IPVN)
lam = BoxCox.lambda(IPVN)
lam
mod = auto.arima(IVPN, lambda = lam) ; mod
mod = auto.arima(IPVN, lambda = lam) ; mod
pro = forecast(mod, h = 12) ; pro
plot(pro)
mod = auto.arima(IPVN, lambda = 0) ; mod
pro = forecast(mod, h = 12) ; pro
plot(pro)
mod = auto.arima(IPVN, lambda = lam) ; mod
pro = forecast(mod, h = 12) ; pro
lam = powerTransform(z)$lambda ; lam
z = car::bcPower(AirPassengers, lambda = lam)
z
z = log(AirPassengers)
z
plot(AirPassengers)
lam = BoxCox.lambda(AirPassengers)
lam
lam = BoxCox.lambda(AirPassengers)
lam
z = car::bcPower(AirPassengers, lambda = lam)
z
z = log(AirPassengers)
z
z = car::bcPower(IPVN, lambda = lam)
IPVN <- read_excel("C:/Users/Hp/Downloads/IPVN.xlsx")
IPVN<-IPVN[-c(1:8,205:214),4]
names(IPVN)<-c("indice de precio vivienda")
# names(IPVN)<-c("Fechas","Bogotá")
# a<-seq(as.Date('2004-01-28'), as.Date('2020-04-28'), by = "month")
# IPVN$Fechas<-a
IPVN<-ts(IPVN,start = c(2004,01,28),end = c(2020,04,28),frequency = 12)
plot(IPVN)
lam = BoxCox.lambda(IPVN)
lam
z = car::bcPower(IPVN, lambda = lam)
z
IPVN
log(IPVN)
IPVN <- read_excel("C:/Users/Hp/Downloads/IPVN.xlsx")
IPVN<-IPVN[-c(1:8,205:214),4]
names(IPVN)<-c("indice de precio vivienda")
# names(IPVN)<-c("Fechas","Bogotá")
# a<-seq(as.Date('2004-01-28'), as.Date('2020-04-28'), by = "month")
# IPVN$Fechas<-a
IPVN<-ts(IPVN,start = c(2004,01,28),end = c(2020,04,28),frequency = 12)
plot(IPVN)
lam = BoxCox.lambda(IPVN)
lam
z = car::bcPower(IPVN, lambda = lam)
z
z<-((IPVN^lam)-1)/lam
z
z<-((IPVN^-lam)-1)/lam
z
z<-((IPVN^lam)-1)/lam
z
z = car::bcPower(IPVN, lambda = lam)
z
z<-car::bcPower(IPVN, lambda = lam)
plot(z)
z
plot(z)
plot(decompose(IPVN))
plot(decompose(z))
plot(IPVN)
plot(z)
plot(decompose(IPVN))
plot(decompose(z))
adf.test(z)
x<-diff(y,lag=12)
y<-diff(z, differences = 1)
w<-diff(z, lag = 12, differences = 1)
x<-diff(y,lag=12)
var(y) ; var(w) ; var(x)
y<-diff(z, differences = 2)
w<-diff(z, lag = 12, differences = 1)
x<-diff(y,lag=12,)
x<-diff(y,lag=12)
var(y) ; var(w) ; var(x)
y<-diff(z, differences = 1)
var(y) ; var(w) ; var()
##diferenciada 1 vez
y<-diff(z, differences = 1)
w<-diff(z, lag = 12, differences = 1)
x<-diff(y,lag=12)
var(y) ; var(w) ; var()
var(y) ; var(w) ; var(x)
##diferenciada 1 vez
y<-diff(z, differences = 2)
w<-diff(z, lag = 12, differences = 1)
x<-diff(y,lag=12)
var(y) ; var(w) ; var(x)
##diferenciada 1 vez
y<-diff(z, differences = 1)
w<-diff(z, lag = 12, differences = 1)
x<-diff(y,lag=12)
var(y) ; var(w) ; var(x)
diff(z,differences = 2)
var(diff(z,differences = 2))
var(y) ; var(w) ; var(x)
mod = auto.arima(IPVN, lambda = lam) ; mod
plot(AirPassengers)
lam = BoxCox.lambda(AirPassengers)
#z = car::bcPower(AirPassengers, lambda = lam)
z = log(AirPassengers)
plot(z)
plot(decompose(AirPassengers))
plot(decompose(z))
adf.test(z)
y = diff(z, differences = 1)
plot(y)
w = diff(z, lag = 12, differences = 1)
plot(w)
var(y) ; var(w) ; var(diff(y, lag = 12))
acf(z)
acf(diff(y, lag = 12))
pacf(diff(y, lag = 12))
eacf(diff(y, lag = 12))
mod = auto.arima(z) ; mod
mod
mod = auto.arima(AirPassengers, lambda = lam) ; mod
mod = auto.arima(IPVN, lambda = lam) ; mod
?auto.arima
# names(IPVN)<-c("Fechas","Bogotá")
# a<-seq(as.Date('2004-01-28'), as.Date('2020-04-28'), by = "month")
# IPVN$Fechas<-a
IPVN<-ts(IPVN,start = c(2004,01,28),end = c(2020,04,28),frequency = 12)
plot(IPVN)
lam = BoxCox.lambda(IPVN)
z<-((IPVN^lam)-1)/lam
z<-car::bcPower(IPVN, lambda = lam)
plot(z)
plot(decompose(IPVN))
plot(decompose(z))
adf.test(z)
##diferenciada 1 vez
y<-diff(z, differences = 1)
w<-diff(z, lag = 12, differences = 1)
x<-diff(y,lag=12)
var(diff(z,differences = 2))
var(y) ; var(w) ; var(x)
mod = auto.arima(IPVN, lambda = lam) ; mod
mod1<-auto.arima(IPVN)
mod1
mod = auto.arima(IPVN, lambda = lam) ; mod
pro = forecast(mod, h = 12) ; pro
plot(pro)
var(y) ; var(w) ; var(x);var(diff(z,differences = 2))
mod = auto.arima(IPVN, lambda = lam,max.order = 1) ; mod
mod = auto.arima(IPVN, lambda = lam,max.d = 1) ; mod
pro = forecast(mod, h = 12) ; pro
plot(pro)
mod = auto.arima(IPVN, lambda = lam,max.D = 1) ; mod
mod = auto.arima(IPVN, lambda = lam,max.d = 1) ; mod
mod = auto.arima(IPVN, lambda = lam,max.d = 1,allowdrift = F) ; mod
mod = auto.arima(IPVN, lambda = lam,max.d = 1) ; mod
pro = forecast(mod, h = 12) ; pro
var(y) ; var(w) ; var(x);var(diff(z,differences = 2));var(diff(z, lag = 12, differences = 2))
acf(y)
pacf(y)
eacf(y)
mod = auto.arima(IPVN, lambda = lam,max.d = 1) ; mod
pro = forecast(mod, h = 12) ; pro
plot(pro)
a = mod$residuals ; a
plot(a)
acf(a)
qqnorm(a) ; qqline(a)
shapiro.test(a)
mod1 = auto.arima(Jhon,lambda = 0,allowdrift = F) ; mod
150000/40
mod1 = auto.arima(IPVN, lambda = lam) ; mod1
pro = forecast(mod1, h = 12) ; pro
a = mod$residuals ; a
plot(a)
acf(a)
qqnorm(a) ; qqline(a)
shapiro.test(a)
mod1 = auto.arima(IPVN, lambda = lam) ; mod1
pro1 = forecast(mod1, h = 12) ; pro1
mod1 = auto.arima(IPVN, lambda = lam) ; mod1
pro1 = forecast(mod1, h = 8) ; pro1
plot(pro1)
mod = auto.arima(IPVN, lambda = lam,max.d = 1) ; mod
pro = forecast(mod, h = 12) ; pro
pro = forecast(mod, h = 8) ; pro
pro1 = forecast(mod1, h = 8) ; pro1
mod1 = auto.arima(IPVN, lambda = lam) ; mod1
pro1 = forecast(mod1, h = 8) ; pro1
plot(pro1)
a = mod1$residuals ; a
plot(a)
acf(a)
qqnorm(a) ; qqline(a)
shapiro.test(a)
mod2 = auto.arima(IPVN, lambda = lam,max.d = 1) ; mod
pro2 = forecast(mod2, h = 8) ; pro
plot(pro2)
a = mod$residuals ; a
plot(a)
acf(a)
qqnorm(a) ; qqline(a)
shapiro.test(a)
pro1$upper[,1]-pro1$lower[,1]
pro2$upper[,1]-pro2$lower[,1]
library(readxl)
library(dplyr)
require(TSA)
require(forecast)
require(tseries)
require(ggplot2)
require(car)
IPVN <- read_excel("C:/Users/Hp/Downloads/IPVN.xlsx")
IPVN<-IPVN[-c(1:8,205:214),4]
names(IPVN)<-c("indice de precio vivienda")
# names(IPVN)<-c("Fechas","Bogotá")
# a<-seq(as.Date('2004-01-28'), as.Date('2020-04-28'), by = "month")
# IPVN$Fechas<-a
IPVN<-ts(IPVN,start = c(2004,01,28),end = c(2020,04,28),frequency = 12)
mod2 = auto.arima(IPVN, lambda = lam,max.d = 1) ; mod
x = rnorm(100,10,1)
z = ts(x, start = c(10, 3), frequency = 7) ; z
plot(z)
# Ejemplo 1
?AirPassengers
plot(AirPassengers)
lam = BoxCox.lambda(AirPassengers)
#z = car::bcPower(AirPassengers, lambda = lam)
z = log(AirPassengers)
plot(z)
plot(decompose(AirPassengers))
plot(decompose(z))
adf.test(z)
IPVN <- read_excel("C:/Users/Hp/Downloads/IPVN.xlsx")
IPVN<-IPVN[-c(1:8,205:214),4]
names(IPVN)<-c("indice de precio vivienda")
# names(IPVN)<-c("Fechas","Bogotá")
# a<-seq(as.Date('2004-01-28'), as.Date('2020-04-28'), by = "month")
# IPVN$Fechas<-a
IPVN<-ts(IPVN,start = c(2004,01,28),end = c(2020,04,28),frequency = 12)
plot(IPVN)
lam = BoxCox.lambda(IPVN)
IPVN <- read_excel("C:/Users/Hp/Downloads/IPVN.xlsx")
IPVN<-IPVN[-c(1:8,205:214),4]
# names(IPVN)<-c("Fechas","Bogotá")
# a<-seq(as.Date('2004-01-28'), as.Date('2020-04-28'), by = "month")
# IPVN$Fechas<-a
IPVN<-ts(IPVN,start = c(2004,01,28),end = c(2020,04,28),frequency = 12)
plot(IPVN)
lam = BoxCox.lambda(IPVN)
z<-((IPVN^lam)-1)/lam
z<-car::bcPower(IPVN, lambda = lam)
plot(z)
plot(decompose(IPVN))
plot(decompose(z))
adf.test(z)
##diferenciada 1 vez
y<-diff(z, differences = 1)
w<-diff(z, lag = 12, differences = 1)
x<-diff(y,lag=12)
var(y) ; var(w) ; var(x);var(diff(z,differences = 2));var(diff(z, lag = 12, differences = 2))
acf(y)
pacf(y)
eacf(y)
mod1 = auto.arima(IPVN, lambda = lam) ; mod1
pro1 = forecast(mod1, h = 8) ; pro1
plot(pro1)
a = mod1$residuals ; a
plot(a)
acf(a)
qqnorm(a) ; qqline(a)
shapiro.test(a)
mod2 = auto.arima(IPVN, lambda = lam,max.d = 1,stationary = F) ; mod
pro2 = forecast(mod2, h = 8) ; pro
plot(pro2)
mod2 = auto.arima(IPVN, lambda = lam,max.d = 1,stationary = F) ; mod
pro2 = forecast(mod2, h = 8) ; pro
plot(pro2)
a = mod$residuals ; a
plot(a)
acf(a)
qqnorm(a) ; qqline(a)
shapiro.test(a)
lam
# names(IPVN)<-c("Fechas","Bogotá")
# a<-seq(as.Date('2004-01-28'), as.Date('2020-04-28'), by = "month")
# IPVN$Fechas<-a
IPVN<-ts(IPVN,start = c(2004,01,28),end = c(2020,04,28),frequency = 12)
plot(IPVN)
lam = BoxCox.lambda(IPVN)
z<-((IPVN^lam)-1)/lam
z<-car::bcPower(IPVN, lambda = lam)
plot(z)
plot(IPVN)
names(IPVN)<-c("Indice de precio vivienda nueva")
# names(IPVN)<-c("Fechas","Bogotá")
# a<-seq(as.Date('2004-01-28'), as.Date('2020-04-28'), by = "month")
# IPVN$Fechas<-a
IPVN<-ts(IPVN,start = c(2004,01,28),end = c(2020,04,28),frequency = 12)
plot(IPVN)
IPVN <- read_excel("C:/Users/Hp/Downloads/IPVN.xlsx")
IPVN<-IPVN[-c(1:8,205:214),4]
names(IPVN)<-c("Indice de precio vivienda nueva")
# names(IPVN)<-c("Fechas","Bogotá")
# a<-seq(as.Date('2004-01-28'), as.Date('2020-04-28'), by = "month")
# IPVN$Fechas<-a
IPVN<-ts(IPVN,start = c(2004,01,28),end = c(2020,04,28),frequency = 12)
plot(IPVN)
talleres <- read_excel("~/EL BOSQUE/2020-1/Diseño/talleres.xlsx")
View(talleres)
talleres[2:7,2:9]
talleres[2:7,2:10]
as.vector(talleres[2:7,2:10])
a<-talleres[2:7,2:10]
as.vector.factor(a)
as.vector(a)
as.matrix(a)
as.vector(as.matrix(a))
as.numeric(as.vector(as.matrix(a)))
as.numeric(as.vector(a))
a<-talleres[2:7,2:10]
as.numeric(as.vector(a))
talleres <- read_excel("~/EL BOSQUE/2020-1/Diseño/talleres.xlsx")
a<-talleres[2:7,2:10]
as.numeric(as.vector(as.matrix(a)))
as.numeric(a)
talleres <- read_excel("~/EL BOSQUE/2020-1/Diseño/talleres.xlsx")
b<-talleres[12:17,2:10]
b
as.numeric(as.vector(as.matrix(b)))
c<-talleres[2:13,14:15]
c
as.numeric(as.vector(as.matrix(c)))
a<-talleres[2:7,2:10]
a
as.numeric(as.vector(as.matrix(a)))
talleres <- read_excel("~/EL BOSQUE/2020-1/Diseño/talleres.xlsx")
d<-talleres[2:10,19:22]
d
as.numeric(as.vector(as.matrix(d)))
