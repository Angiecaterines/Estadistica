19 1987 3 1.30 1.00 1.60 1.30
20 1988 6 0.50 -0.70 -1.20 -1.90
21 1989 4 -1.50 -0.60 -0.30 -0.20
22 1990 6 0.20 0.20 0.30 0.30
23 1991 9 0.30 0.60 0.90 1.40
24 1992 4 1.60 1.20 0.20 0.00
25 1993 7 0.40 0.80 0.40 0.30
26 1994 6 0.20 0.50 0.60 1.20
27 1995 9 0.90 0.30 -0.20 -0.70
28 1996 5 -0.70 -0.10 -0.10 -0.30
29 1997 4 -0.30 0.80 2.00 2.50
30 1998 9 1.90 0.50 -0.80 -1.30
31 1999 6 -1.20 -0.80 -0.90 -1.30
32 2000 3 -1.40 -0.60 -0.40 -0.60
33 2001 3 -0.50 -0.10 0.20 -0.10
34 2002 3 0.10 0.70 1.00 1.50
35 2003 5 0.90 -0.10 0.50 0.60
36 2004 5 0.30 0.30 0.80 0.80
37 2005 8 0.50 0.40 0.30 -0.40)
scan()
datos<-scan()
datos
eucs<-c(2,10,16,20,19,18,12,16,3,12,32,2,16,7,10,15,30,4,4,19,11,0,0,0,3,8,8,15,21,24,15)
eucs<-c(2,10,16,20,19,18,12,16,3,12,32,2,16,7,10,15,30,4,4,19,11,0,0,0,3,8,8,15,21,24,15)
area<-c(22,11,51,22,4,61,16,14,5,6,3,13,24,32,22,27,18,9,21,14,4,5,19,12,15,38,24,16,6,16,15)
rep(0,9)
grazed<-c(rep(0,9),1,0,1,1,0,1,1,0,1,1,0,1,1,1,1,0,1,0,0,0,1,1)
shrubs<-c(rep(1,9),rep(0,9))
shrubs<-c(rep(1,9),rep(0,9),1,rep(0,5),1,0,1,1,0,0,0)
bulokes<-c(120,67,85,45,160,75,100,32,275,227,23,277,243,117,97,99,45,123,96,261,160,192,323,190,222,148,198,93,88,138,70)
timber<-c(16,25,13,12,14,6,12,15,8,10,61,22,25,9,35,25,19,22,22,11,45,22,60,48,26,38,28,16,45,21,31)
minerab<-c(0,0,3,2,8,1,8,5,0,4,19,0,2,0,3,1,7,1,0,7,rep(0,8),3,4,6)
modelo1=glm(minerab~eucs+area+grazed+shrubs,bulokes,timber ,poisson(link="log"))
library(MASS)
stepAIC(modelo1,direction = "both")
eucs<-c(2,10,16,20,19,18,12,16,3,12,32,2,16,7,10,15,30,4,4,19,11,0,0,0,3,8,8,15,21,24,15)
area<-c(22,11,51,22,4,61,16,14,5,6,3,13,24,32,22,27,18,9,21,14,4,5,19,12,15,38,24,16,6,16,15)
grazed<-c(rep(0,9),1,0,1,1,0,1,1,0,1,1,0,1,1,1,1,0,1,0,0,0,1,1)
shrubs<-c(rep(1,9),rep(0,9),1,rep(0,5),1,0,1,1,0,0,0)
bulokes<-c(120,67,85,45,160,75,100,32,275,227,23,277,243,117,97,99,45,123,96,261,160,192,323,190,222,148,198,93,88,138,70)
timber<-c(16,25,13,12,14,6,12,15,8,10,61,22,25,9,35,25,19,22,22,11,45,22,60,48,26,38,28,16,45,21,31)
minerab<-c(0,0,3,2,8,1,8,5,0,4,19,0,2,0,3,1,7,1,0,7,rep(0,8),3,4,6)
modelo1=glm(minerab~eucs+area+grazed+shrubs,bulokes,timber ,poisson(link="log"))
modelo1=glm(minerab~eucs+area+grazed+shrubs+bulokes+timber,poisson(link="log"))
library(MASS)
stepAIC(modelo1,direction = "both")
final = glm(minerab ~ eucs + area+timber, family=poisson(link="log"))
summary(final)
1-pchisq(150.545-55.574,30-27)
1-(55.574/150.545)
plot(residuals(final, type="pearson"))
plot(residuals(final, type="deviance"))
plot(residuals(final, type="pearson"))
plot(residuals(final, type="deviance"))
ifelse(abs(residuals(final, type="pearson"))>2,1,0)
ifelse(abs(residuals(final, type="deviance"))>2,1,0)
summary(final)
exp(-0.050248+0.113631*1-0.032430*1-0.012133*1)
3/6
0.5*25
3*5
total<-c(10,17,16,12,19,16,16,13,9,11,14,14,15,7,20,17,15,7,5,13,13,
10,10,7,11,6,13,15,10,14,12,8,10,7,10,10,12)
jfm<-c(1,0.30,-1.30,-0.40,1.20,-1.70,-0.60,-1.20,0.50,0.40,0,0.30,-0.50,
0.10,2,-0.20,0.30,1.60,0.4,0.2,0.3,1.60,0.40,0.20,0.90,-0.70,-0.30,1.90,-1.20,-1.40,-0.50,0.10,0.90,0.30,0.50)
amj<-c(0.60,0,-0.80,0.5,-0.60,-0.90,-0.90,-0.50,0.20,-0.40,0.1,0.3,-0.3,0.6,1,-0.5,-0.7,-0.10,1,-0.70,-0.60,0.20,0.6,1.20,0.80,0.5,0.3,-0.10,0.80,0.50,-0.80,-0.60,-0.10,0.70,-0.10,0.3,0.4)
jas<-c(0.40,-0.80,-0.80,1.30,-1.30,-0.50,-1.30,0.30,0.40,-0.40,0.10,0,-0.4,1,-0.2,-0.2,-0.5,0.5,1.6,-1.2,-0.3,0.3,0.90,0.2,0.4,0.6,-0.2,-0.1,2,-0.8,-0.9,-0.4)
jas<-c(0.40,-0.80,-0.80,1.30,-1.30,-0.50,-1.30,0.30,0.40,-0.40,0.10,0,-0.4,1,-0.2,-0.2,-0.5,0.5,1.6,-1.2,-0.3,0.3,0.90,0.2,0.4,0.6,-0.2,-0.1,2,-0.8,-0.9,-0.4,0.2,1,0.5,0.8,0.3)
0.7
ond<-c(0.8,-0.90,-1,2,-2,-0.9,-1.7,0.
8,0.7,-0.2,0.5,0,-0.10,2.20,-0.90,-0.90,-0.30)
ond<-c(0.8,-0.90,-1,2,-2,-0.9,-1.7,0.8,0.7,-0.2,0.5,0,-0.10,2.20,-0.90,-0.90,-0.30)
ond<-c(0.8,-0.90,-1,2,-2,-0.9,-1.7,0.8,0.7,-0.2,0.5,0,-0.10,2.20,-0.90,-0.90,-0.30,1.10,1.30,-1.90,-0.20,0.30,1.4,0,0.3,1.2)
ond<-c(0.8,-0.90,-1,2,-2,-0.9,-1.7,0.8,0.7,-0.2,0.5,0,-0.10,2.20,-0.90,-0.90,-0.30,1.10,1.30,-1.90,-0.20,0.30,1.4,0,0.3,1.2,-0.70,-0.3,2.5,-1.3,-1.3,-0.6,-0.1,1.5,0.6,0.8,-0.4)
total<-c(10,17,16,12,19,16,16,13,9,11,14,14,15,7,20,17,15,7,5,13,13,
10,10,7,11,6,13,15,10,14,12,8,10,7,10,10,12)
jfm<-c(1,0.30,-1.30,-0.40,1.20,-1.70,-0.60,-1.20,0.50,0.40,0,0.30,-0.50,
0.10,2,-0.20,-0.8,-0.4,1.3,0.5,-1.5,0.2,0.30,1.60,0.4,0.2,0.3,1.60,0.40,0.20,0.90,-0.70,-0.30,1.90,-1.20,-1.40,-0.50,0.10,0.90,0.30,0.50)
jfm<-c(1,0.30,-1.30,-0.40,1.20,-1.70,-0.60,-1.20,0.50,0.40,0,0.30,-0.50,
0.10,2,-0.20,-0.8,-0.4,1.3,0.5,-1.5,0.2,0.30,1.60,0.4,0.2,0.90,-0.70,-0.30,1.90,-1.20,-1.40,-0.50,0.10,0.90,0.30,0.50)
modelo1=glm(total~jfm + amj + jas + ond,poisson(link="log"))
library(MASS)
stepAIC(modelo1,direction = "both")
final = glm(total ~ ond, family=poisson(link="log"))
summary(final)
1-pchisq(42.278-22.781,36-35)
1-(22.781/42.278)
plot(residuals(final, type="pearson"))
plot(residuals(final, type="deviance"))
ifelse(abs(residuals(final, type="pearson"))>2,1,0)
summary(final)
exp(2.47441-0.19111*1)
# Install and load libraries
devtools::install_github("amrrs/itunesr")
1
library(tm)
library(SnowballC)
library(wordcloud)
library(cluster, lib.loc = "C:/Program Files/R/R-4.0.4/library")
library(tm)
library(SnowballC)
library(wordcloud)
library(ggplot2)
library(dplyr)
library(readr)
library(cluster)
library(tidyverse)
library(finalfit) # Ajuste y visualización de modelos
library(Amelia) # Métodos de imputación de NA's
library(DataExplorer) # Visualización de datos
library(mice) # Imputación múltiple de NA's
library(VIM) # Incluye función para imputación por kNN
#
#
#
################################################################################
## Conjunto de datos ###########################################################
################################################################################
# Selección de datos de trabajo
datos<-ggplot2::diamonds%>%select(cut,carat,price)
# Estructura de datos
dplyr::glimpse(datos)
# ¿Hay valores faltantes en "datos"?
any(is.na(datos))
# Aleatoriamente se crea un conjunto de valores fila/columna para borrar
set.seed(979)
col<-sample(2:3,15000,replace=T)
row<-sample(nrow(datos),15000,replace=T)
missing<-data.frame(row,col)
# Asignar NA's a la celdas seleccionadas. El conjunto de datos con valores perdidos es dat1
dat1<-datos
for(i in 1:nrow(missing))
dat1[missing[i,1],missing[i,2]]<-NA
# Se agrega la variable color a dat1
dat1$colorMAR<-diamonds$color
# NA´s en colorMAR condicionada a "Very Good" en cut
set.seed(1234)
dat1$colorMAR[dat1$cut=="Very Good"]<-
sample(c("D", "E", "F", "G", "H", "I", "J", NA),
sum(dat1$cut=="Very Good"),
replace = TRUE,
prob = c(rep(0.1,7),0.3))
# NA´s en colorMAR condicionada a "Premium" en cut
set.seed(1234)
dat1$colorMAR[dat1$cut=="Premium"]<-
sample(c("D", "E", "F", "G", "H", "I", "J", NA),
sum(dat1$cut=="Premium"),
replace = TRUE,
prob = c(rep(0.1,7),0.3))
#
#
#
################################################################################
## Detección y conteo global de NA's ###########################################
################################################################################
# '¿Hay NA's dentro del conjunto de datos?
any(is.na(dat1))
# Resumen de datos para detectar NA´s
summary(dat1)
# Función para calcular número de celdas con NA's
=
# Porcentaje de NA's con respecto al total de valores
na.number(dat1)/(nrow(dat1)*ncol(dat1))*100
# Función para calcular número de celdas con NA's
na.number<- function(x){sum(is.na(x))}
na.number(dat1)
# Porcentaje de NA's con respecto al total de valores
na.number(dat1)/(nrow(dat1)*ncol(dat1))*100
# Identificar fila/columna donde está el valor pérdido
ubic.NA<-which(is.na(dat1)==TRUE,arr.ind = TRUE)
# Retorna las filas con al menos, un valor perdido
ubic.NA2<-dat1[!complete.cases(dat1),]
ubic.NA
# Retorna las filas con al menos, un valor perdido
ubic.NA2<-dat1[!complete.cases(dat1),]
ubic.NA2
# Porcentaje de observaciones (filas) con al menos un valor faltante dentro de los datos
incompletos<-nrow(dat1[!complete.cases(dat1),])
porcentaje<-incompletos/nrow(dat1)*100
# Distribución de los NA's en el conjunto de datos (Missing plot)
Amelia::missmap(obj=dat1,col=c("red","yellow"),rank.order = F,legend = T)
#Lo mismo, pero con finalfit (ordenando cut)
dat1%>%arrange(cut)%>%missing_plot()
# Tabla con proporción de valores faltantes por variable con finalfit
dat1%>%finalfit::missing_glimpse()
# Gráfica con proporción de valores faltantes por variable
DataExplorer::plot_missing(data=dat1,title = "Porcentaje de valores perdidos por variables")
multimp.mice<-mice::mice(dat1,m = 5)
multimp.mice$method
zinb <- read.csv("https://stats.idre.ucla.edu/stat/data/fish.csv")
zinb <- read.csv("https://stats.idre.ucla.edu/stat/data/fish.csv")
zinb <- read.csv("https://stats.idre.ucla.edu/stat/data/fish.csv")
X <- cbind(1,zinb$child,zinb$camper)
Z <- cbind(1,zinb$persons)
iter=100
beta=matrix(ncol=3,nrow=iter+1)
beta[1,]=c(0,0,0)
lambda <- exp(t(X)%*%beta)
lambda
lambda <- exp(X%*%beta)
zinb <- read.csv("https://stats.idre.ucla.edu/stat/data/fish.csv")
X <- cbind(1,zinb$child,zinb$camper)
dim(X)
beta=matrix(ncol=3,nrow=iter+1)
iter=100
beta=matrix(ncol=3,nrow=iter+1)
beta[1,]=c(0,0,0)
dim(beta)
lambda <- exp(t(X)%*%beta)
t(X)
beta
dim(X)
dim(beta)
lambda <- exp(X%*%t(beta))
for(i in 1:iter){
lambda = exp(t(X)%*%beta[,i])
}
for(i in 1:iter){
lambda = exp(X%*%beta[,i])
}
for(i in 1:iter){
lambda=exp(X%*%beta[i,])
}
gamma =matrix(ncol=3,nrow=iter+1)
beta[1,]=c(0,0,0)
for(i in 1:iter){
lambda=exp(X%*%beta[i,])
pi = exp(t(z)%*%gamma)
}
for(i in 1:iter){
lambda=exp(X%*%beta[i,])
pi = exp(t(Z)%*%gamma)
}
Z <- cbind(1,zinb$persons)
zinb <- read.csv("https://stats.idre.ucla.edu/stat/data/fish.csv")
X <- cbind(1,zinb$child,zinb$camper)
Z <- cbind(1,zinb$persons)
iter=100
beta=matrix(ncol=3,nrow=iter+1)
beta[1,]=c(0,0,0)
gamma =matrix(ncol=2,nrow=iter+1)
gamma[1,]=c(0,0)
for(i in 1:iter){
lambda=exp(X%*%beta[i,])
pi = exp(t(Z)%*%gamma)
}
for(i in 1:iter){
lambda=exp(X%*%beta[i,])
pi = exp(Z%*%gamma)
}
gamma =matrix(ncol=2,nrow=iter+1)
gamma[1,]=c(0,0)
for(i in 1:iter){
lambda=exp(X%*%beta[i,])
pi = exp(Z%*%gamma)
}
for(i in 1:iter){
lambda=exp(X%*%beta[i,])
pi = exp(Z%*%gamma[i,])
}
for(i in 1:iter){
lambda=exp(X%*%beta[i,])
pi = exp(Z%*%gamma[i,])/(1 + exp(Z%*%gamma[i,]))
di = pi /(pi + (1- pi)*(exp(-lambda)))
}
zinb <- read.csv("https://stats.idre.ucla.edu/stat/data/fish.csv")
X <- cbind(1,zinb$child,zinb$camper)
Z <- cbind(1,zinb$persons)
iter=100
beta=matrix(ncol=3,nrow=iter+1)
beta[1,]=c(0,0,0)
gamma =matrix(ncol=2,nrow=iter+1)
gamma[1,]=c(0,0)
for(i in 1:iter){
lambda=exp(X%*%beta[i,])
pi = exp(Z%*%gamma[i,])/(1 + exp(Z%*%gamma[i,]))
di = pi /(pi + (1- pi)*(exp(-lambda)))
Wz = diag(1-di)
vz = (zinb$count - lambda)/lambda
wx = diag(pi(1-pi))
vx = (di-pi)
}
for(i in 1:iter){
lambda=exp(X%*%beta[i,])
pi = exp(Z%*%gamma[i,])/(1 + exp(Z%*%gamma[i,]))}
for(i in 1:iter){
lambda=exp(X%*%beta[i,])
pi = exp(Z%*%gamma[i,])/(1 + exp(Z%*%gamma[i,]))
di = pi /(pi + (1- pi)*(exp(-lambda)))
Wz = diag(1-di)
vz = (zinb$count - lambda)/lambda
wx = diag(pi(1-pi))
vx = (di-pi)
}
for(i in 1:iter){
lambda=exp(X%*%beta[i,])
pi = exp(Z%*%gamma[i,])/(1 + exp(Z%*%gamma[i,]))
di = pi /(pi + (1- pi)*(exp(-lambda)))
WZ = diag(1-di)
VZ = (zinb$count - lambda)/lambda
WX = diag(pi(1-pi))
VX = (di-pi)
gamma[i+1,] = ginv(t(Z)%*%WZ%*%Z)%*%t(Z)%*%WZ%*%(Z%*%gamma[i,]+VZ)
beta[i+1,] = ginv(t(X)%*%WX%*%X)%*%t(X)%*%WX%*%(X%*%beta[i,]+XZ)
}
dim(Z)
dim(gamma)
X%*%beta[i,]
dim(X%*%beta[i,])
dim(x = )
dim(x )
dim(X )
dim(beta[i,])
dim(beta[1,])
iter=100
beta=matrix(ncol=3,nrow=iter+1)
beta[1,]=c(0,0,0)
dim(X%*%beta[1,])
dim(X)
dim(beta[1,])
beta[1,]
gamma =matrix(ncol=2,nrow=iter+1)
gamma[1,]=c(0,0)
exp(Z%*%gamma[i,])
exp(Z%*%gamma[i,])/(1 + exp(Z%*%gamma[i,]))
di = pi /(pi + (1- pi)*(exp(-lambda)))
di
di = ifelse(zinb$count==0,di,0)
di
WZ = diag(1-di)
WZ
VZ = (zinb$count - lambda)/lambda
WX = diag(pi(1-pi))
WX = diag(pi*(1-pi))
VX = (di-pi)
gamma[i+1,] = ginv(t(Z)%*%WZ%*%Z)%*%t(Z)%*%WZ%*%(Z%*%gamma[i,]+VZ)
library(MASS)
gamma[i+1,] = ginv(t(Z)%*%WZ%*%Z)%*%t(Z)%*%WZ%*%(Z%*%gamma[i,]+VZ)
beta[i+1,] = ginv(t(X)%*%WX%*%X)%*%t(X)%*%WX%*%(X%*%beta[i,]+XZ)
beta[i+1,] = ginv(t(X)%*%WX%*%X)%*%t(X)%*%WX%*%(X%*%beta[i,]+X)
beta[i+1,] = ginv(t(X)%*%WX%*%X)%*%t(X)%*%WX%*%(X%*%beta[i,]+VX)
dim(t(X))
dim(WX)
WZ = diag(as.vector(1-di))
dim(WZ)
WX = diag(as.vector(pi*(1-pi)))
dim(WX)
for(i in 1:iter){
lambda=exp(X%*%beta[i,])
pi = exp(Z%*%gamma[i,])/(1 + exp(Z%*%gamma[i,]))
di = pi /(pi + (1- pi)*(exp(-lambda)))
di = ifelse(zinb$count==0,di,0)
WZ = diag(as.vector(1-di))
VZ = (zinb$count - lambda)/lambda
WX = diag(as.vector(pi*(1-pi)))
VX = (di-pi)
gamma[i+1,] = ginv(t(Z)%*%WZ%*%Z)%*%t(Z)%*%WZ%*%(Z%*%gamma[i,]+VZ)
beta[i+1,] = ginv(t(X)%*%WX%*%X)%*%t(X)%*%WX%*%(X%*%beta[i,]+VX)
}
# Poisson cero inflada ----------------------------------------------------
library(pscl)
library(MASS)
library(lmtest)
zinb <- read.csv("https://stats.idre.ucla.edu/stat/data/fish.csv")
iter=100
beta=matrix(ncol=3,nrow=iter+1)
beta[1,]=c(0,0,0)
gamma=matrix(ncol=2,nrow=iter+1)
gamma[1,]=c(0,0)
x=cbind(1,zinb$child,zinb$camper)
z=cbind(1,zinb$persons)
for(i in 1:iter){
lambda=exp(x%*%beta[i,])
pi=exp(z%*%gamma[i,])/(1+exp(z%*%gamma[i,]))
dm=pi/(pi+(1-pi)*exp(-lambda))
dm=ifelse(zinb$count==0,dm,0)
wx=diag(as.vector(lambda*(1-dm)))
vx=(zinb$count-lambda)/lambda
vz=(as.vector(dm)-pi)/(pi*(1-pi))
wz=diag(as.vector(pi*(1-pi)))
gamma[i+1,]=ginv(t(z)%*%wz%*%z)%*%t(z)%*%wz%*%(z%*%gamma[i,]+vz)
beta[i+1,]=ginv(t(x)%*%wx%*%x)%*%t(x)%*%wx%*%(x%*%beta[i,]+vx)
}
for(i in 1:iter){
lambda=exp(X%*%beta[i,])
pi = exp(Z%*%gamma[i,])/(1 + exp(Z%*%gamma[i,]))
di = pi /(pi + (1- pi)*(exp(-lambda)))
di = ifelse(zinb$count==0,di,0)
WX = diag(as.vector(lambda *(1-di)))
VX = (zinb$count - lambda)/lambda
WZ = diag(as.vector(pi*(1-pi)))
VZ = (as.vector(di)-pi)/(pi*(1-pi))
gamma[i+1,] = ginv(t(Z)%*%WZ%*%Z)%*%t(Z)%*%WZ%*%(Z%*%gamma[i,]+VZ)
beta[i+1,] = ginv(t(X)%*%WX%*%X)%*%t(X)%*%WX%*%(X%*%beta[i,]+VX)
}
gamma[i+1,]
gamma
beta
lambda = exp(t(X)%*%beta)
lambda = exp(X%*%beta)
lambda = exp(X%*%beta[i,])
lambda = exp(t(X)%*%beta[i,])
for(i in 1:iter){
lambda = exp(X%*%beta[i,])
pi = exp(t(Z)%*%gamma[i,])/(1+exp(t(Z)%*%gamma[i,]))
}
for(i in 1:iter){
lambda = exp(X%*%beta[i,])
pi = exp(Z%*%gamma[i,])/(1+exp(t(Z)%*%gamma[i,]))
}
for(i in 1:iter){
lambda = exp(X%*%beta[i,])
pi = exp(Z%*%gamma[i,])/(1+exp(Z%*%gamma[i,]))
}
alpha = matrix(ncol=1,nrow = iter+1)
alpha[1,]=c(0)
for(i in 1:iter){
lambda = exp(X%*%beta[i,])
pi = exp(Z%*%gamma[i,])/(1+exp(Z%*%gamma[i,]))
dm=pi/(pi+(1-pi)*exp(-lambda))
dm=ifelse(zinb$count==0,dm,0)
WX = diag(as.vector((1-dm)*lambda/(alpha + lambda)))
VX = (zinb$count -lambda) / lambda
WZ=diag(as.vector(pi*(1-pi)))
VZ = (dm-pi)/(pi*(1-pi))
}
lambda = exp(X%*%beta[i,])
pi = exp(Z%*%gamma[i,])/(1+exp(Z%*%gamma[i,]))
dm=pi/(pi+(1-pi)*exp(-lambda))
dm=ifelse(zinb$count==0,dm,0)
WX = diag(as.vector((1-dm)*lambda/(alpha + lambda)))
alpha
lambda
alpha
lambda
VX = (zinb$count -lambda) / lambda
WZ=diag(as.vector(pi*(1-pi)))
VZ = (dm-pi)/(pi*(1-pi))
alpha + lambda
(alpha + lambda)
library(pscl)
zeroinfl(zinb$count~zinb$child + zinb$camper| zinb$persons)
a<-zeroinfl(zinb$count~zinb$child + zinb$camper| zinb$persons)
summary(a)
beta
gamma
beta[i]
a+
a
beta[i+1]
beta[i+1,]
gamma[i+1,]
library(MASS)
library(pscl)
zinb <- read.csv("https://stats.idre.ucla.edu/stat/data/fish.csv")
X <- cbind(1,zinb$child,zinb$camper)
Z <- cbind(1,zinb$persons)
iter=100
beta=matrix(ncol=3,nrow=iter+1)
beta[1,]=c(0,0,0)
gamma =matrix(ncol=2,nrow=iter+1)
gamma[1,]=c(0,0)
alpha = matrix(ncol=1,nrow = iter+1)
alpha[1,]=c(0)
for(i in 1:iter){
lambda = exp(X%*%beta[i,])
pi = exp(Z%*%gamma[i,])/(1+exp(Z%*%gamma[i,]))
dm=pi/(pi+(1-pi)*exp(-lambda))
dm=ifelse(zinb$count==0,dm,0)
WX = diag(as.vector((1-dm)*lambda/(alpha + lambda)))
VX = (zinb$count -lambda) / lambda
WZ=diag(as.vector(pi*(1-pi)))
VZ = (dm-pi)/(pi*(1-pi))
}
a<-zeroinfl(zinb$count~zinb$child + zinb$camper| zinb$persons)
library(MASS)
zinb <- read.csv("https://stats.idre.ucla.edu/stat/data/fish.csv")
X <- cbind(1,zinb$child,zinb$camper)
Z <- cbind(1,zinb$persons)
iter=100
beta=matrix(ncol=3,nrow=iter+1)
beta[1,]=c(0,0,0)
gamma =matrix(ncol=2,nrow=iter+1)
gamma[1,]=c(0,0)
for(i in 1:iter){
lambda=exp(X%*%beta[i,])
pi = exp(Z%*%gamma[i,])/(1 + exp(Z%*%gamma[i,]))
di = pi /(pi + (1- pi)*(exp(-lambda)))
di = ifelse(zinb$count==0,di,0)
WX = diag(as.vector(lambda *(1-di)))
VX = (zinb$count - lambda)/lambda
WZ = diag(as.vector(pi*(1-pi)))
VZ = (as.vector(di)-pi)/(pi*(1-pi))
gamma[i+1,] = ginv(t(Z)%*%WZ%*%Z)%*%t(Z)%*%WZ%*%(Z%*%gamma[i,]+VZ)
beta[i+1,] = ginv(t(X)%*%WX%*%X)%*%t(X)%*%WX%*%(X%*%beta[i,]+VX)
}
a<-zeroinfl(zinb$count~zinb$child + zinb$camper| zinb$persons)
beta[i+1,]
a
summary(a)
library(DescTools)
PseudoR2(a)
PseudoR2(a,"Nagelkerkel")
summary(a)
b<-zeroinfl(zinb$count~1 | 1)
summary(b)
a<-zeroinfl(zinb$count~zinb$child + zinb$camper| zinb$persons)
summary(a)
summary(b)
q-pchisq(-1127+1032,3)
1-pchisq(-1127+1032,3)
summary(a)
